//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BeatDetection.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "14.0.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("0")]
        public float AudioCorrection {
            get {
                return ((float)(this["AudioCorrection"]));
            }
            set {
                this["AudioCorrection"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1")]
        public float MaxAudioVolume {
            get {
                return ((float)(this["MaxAudioVolume"]));
            }
            set {
                this["MaxAudioVolume"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("1280")]
        public int ResolutionX {
            get {
                return ((int)(this["ResolutionX"]));
            }
            set {
                this["ResolutionX"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("720")]
        public int ResolutionY {
            get {
                return ((int)(this["ResolutionY"]));
            }
            set {
                this["ResolutionY"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("4")]
        public int AntiAliasingSamples {
            get {
                return ((int)(this["AntiAliasingSamples"]));
            }
            set {
                this["AntiAliasingSamples"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("True")]
        public bool VSync {
            get {
                return ((bool)(this["VSync"]));
            }
            set {
                this["VSync"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("Normal")]
        public global::OpenTK.WindowState WindowState {
            get {
                return ((global::OpenTK.WindowState)(this["WindowState"]));
            }
            set {
                this["WindowState"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("../../External Programs/sonic-annotator-1.0-win32/sonic-annotator.exe")]
        public string SonicAnnotatorPath {
            get {
                return ((string)(this["SonicAnnotatorPath"]));
            }
            set {
                this["SonicAnnotatorPath"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("../../External Programs/Vamp Plugins")]
        public string PluginPath {
            get {
                return ((string)(this["PluginPath"]));
            }
            set {
                this["PluginPath"] = value;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(".mp3,.flac,.wav,.m4a,.wma")]
        public string FileFilter {
            get {
                return ((string)(this["FileFilter"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("turnt-ninja")]
        public string TempFolderName {
            get {
                return ((string)(this["TempFolderName"]));
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("9")]
        public float OnsetActivationThreshold {
            get {
                return ((float)(this["OnsetActivationThreshold"]));
            }
            set {
                this["OnsetActivationThreshold"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("False")]
        public bool OnsetAdaptiveWhitening {
            get {
                return ((bool)(this["OnsetAdaptiveWhitening"]));
            }
            set {
                this["OnsetAdaptiveWhitening"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Collections.Generic.List<BeatDetection.Audio.SongBase> RecentSongs {
            get {
                return ((global::System.Collections.Generic.List<BeatDetection.Audio.SongBase>)(this["RecentSongs"]));
            }
            set {
                this["RecentSongs"] = value;
            }
        }
        
        [global::System.Configuration.UserScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("20")]
        public int MaxRecentSongCount {
            get {
                return ((int)(this["MaxRecentSongCount"]));
            }
            set {
                this["MaxRecentSongCount"] = value;
            }
        }
    }
}
